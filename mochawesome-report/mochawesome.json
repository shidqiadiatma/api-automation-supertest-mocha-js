{
  "stats": {
    "suites": 5,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2023-11-20T08:20:24.776Z",
    "end": "2023-11-20T08:20:38.503Z",
    "duration": 13727,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "24e1fd6f-64fd-4f66-abfb-cbb9c64286de",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ba5e5dbe-a3a7-42aa-8957-df916f97e9ad",
          "title": "POST-Create User (/Account/v1/User)",
          "fullFile": "C:\\my-document\\automations\\api-automation\\testcases\\bookstore.api.js",
          "file": "\\testcases\\bookstore.api.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[BS-1] Verifikasi berhasil membuat user baru",
              "fullTitle": "POST-Create User (/Account/v1/User) [BS-1] Verifikasi berhasil membuat user baru",
              "timedOut": false,
              "duration": 999,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(bookStore.baseUrl)\n    .post('/Account/v1/User')\n    .send(\n        {\n            \"userName\": randomName,\n            \"password\": \"passWord123*\"\n        })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Connection', 'keep-alive')\n    .set('Accept-Encoding', 'gzip, deflate, br')\n    .end(function (err, res) {\n        expect(res.statusCode).to.be.equal(201);\n        expect(res.body.userID).not.to.be.null;\n        expect(res.body.username).to.be.equal(randomName);\n        username_value = res.body.username;\n        userID_value = res.body.userID;\n        done();\n    });",
              "err": {},
              "uuid": "a3145d62-80d9-427f-8395-1b69384d9473",
              "parentUUID": "ba5e5dbe-a3a7-42aa-8957-df916f97e9ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[BS-2] Verifikasi gagal membuat user baru dengan format password yang salah",
              "fullTitle": "POST-Create User (/Account/v1/User) [BS-2] Verifikasi gagal membuat user baru dengan format password yang salah",
              "timedOut": false,
              "duration": 716,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(bookStore.baseUrl)\n    .post('/Account/v1/User')\n    .send(\n        {\n            \"userName\": randomName,\n            \"password\": \"passwordnih\"\n        })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Connection', 'keep-alive')\n    .set('Accept-Encoding', 'gzip, deflate, br')\n    .end(function (err, res) {\n        expect(res.statusCode).to.be.equal(400);\n        expect(res.body.code).to.be.equal(\"1300\");\n        expect(res.body.message).to.be.equal(\"Passwords must have at least one non alphanumeric character, one digit ('0'-'9'), one uppercase ('A'-'Z'), one lowercase ('a'-'z'), one special character and Password must be eight characters or longer.\");\n        done();\n    });",
              "err": {},
              "uuid": "b04028f0-a5a9-4790-a3ba-a83c7a7b7b20",
              "parentUUID": "ba5e5dbe-a3a7-42aa-8957-df916f97e9ad",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[BS-3] Verifikasi gagal membuat user baru dengan username yang sudah digunakan",
              "fullTitle": "POST-Create User (/Account/v1/User) [BS-3] Verifikasi gagal membuat user baru dengan username yang sudah digunakan",
              "timedOut": false,
              "duration": 699,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(bookStore.baseUrl)\n    .post('/Account/v1/User')\n    .send(\n        {\n            \"userName\": \"shidqiadiatma01\",\n            \"password\": \"passWord123*\"\n        })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Connection', 'keep-alive')\n    .set('Accept-Encoding', 'gzip, deflate, br')\n    .end(function (err, res) {\n        expect(res.statusCode).to.be.equal(406);\n        expect(res.body.code).to.be.equal(\"1204\");\n        expect(res.body.message).to.be.equal(\"User exists!\");\n        done();\n    });",
              "err": {},
              "uuid": "e4c3d6ce-8e24-4f9f-a1f4-423cd3cd8f89",
              "parentUUID": "ba5e5dbe-a3a7-42aa-8957-df916f97e9ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a3145d62-80d9-427f-8395-1b69384d9473",
            "b04028f0-a5a9-4790-a3ba-a83c7a7b7b20",
            "e4c3d6ce-8e24-4f9f-a1f4-423cd3cd8f89"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2414,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "c4061971-8b84-46f3-bdda-36c72b32bf6d",
          "title": "POST-Generate Token (/Account/v1/GenerateToken)",
          "fullFile": "C:\\my-document\\automations\\api-automation\\testcases\\bookstore.api.js",
          "file": "\\testcases\\bookstore.api.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[BS-4] Verifikasi berhasil generate token pada user baru",
              "fullTitle": "POST-Generate Token (/Account/v1/GenerateToken) [BS-4] Verifikasi berhasil generate token pada user baru",
              "timedOut": false,
              "duration": 976,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(bookStore.baseUrl)\n    .post('/Account/v1/GenerateToken')\n    .send(\n        {\n            \"userName\": username_value,\n            \"password\": \"passWord123*\"\n        })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Connection', 'keep-alive')\n    .set('Accept-Encoding', 'gzip, deflate, br')\n    .end(function (err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.token).not.to.be.null;\n        expect(res.body.expires).not.to.be.null;\n        expect(res.body.status).to.be.equal(\"Success\");\n        expect(res.body.result).to.be.equal(\"User authorized successfully.\");\n        token = res.body.token;\n        done();\n    });",
              "err": {},
              "uuid": "8ae5d489-9f1a-43e6-b6a5-a63ee2404e1f",
              "parentUUID": "c4061971-8b84-46f3-bdda-36c72b32bf6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[BS-5] Verifikasi gagal generate token pada username yang tidak valid",
              "fullTitle": "POST-Generate Token (/Account/v1/GenerateToken) [BS-5] Verifikasi gagal generate token pada username yang tidak valid",
              "timedOut": false,
              "duration": 1237,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(bookStore.baseUrl)\n    .post('/Account/v1/GenerateToken')\n    .send(\n        {\n            \"userName\": 'usernameNgasal',\n            \"password\": \"passWord123*\"\n        })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Connection', 'keep-alive')\n    .set('Accept-Encoding', 'gzip, deflate, br')\n    .end(function (err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.token).to.be.null;\n        expect(res.body.expires).to.be.null;\n        expect(res.body.status).to.be.equal(\"Failed\");\n        expect(res.body.result).to.be.equal(\"User authorization failed.\");\n        done();\n    });",
              "err": {},
              "uuid": "af72a145-1f34-43c2-8283-4ac553d2a3ee",
              "parentUUID": "c4061971-8b84-46f3-bdda-36c72b32bf6d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[BS-6] Verifikasi gagal generate token menggunakan password yang tidak valid/salah",
              "fullTitle": "POST-Generate Token (/Account/v1/GenerateToken) [BS-6] Verifikasi gagal generate token menggunakan password yang tidak valid/salah",
              "timedOut": false,
              "duration": 959,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(bookStore.baseUrl)\n    .post('/Account/v1/GenerateToken')\n    .send(\n        {\n            \"userName\": username_value,\n            \"password\": 'salahpassword'\n        })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Connection', 'keep-alive')\n    .set('Accept-Encoding', 'gzip, deflate, br')\n    .end(function (err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body.token).to.be.null;\n        expect(res.body.expires).to.be.null;\n        expect(res.body.status).to.be.equal(\"Failed\");\n        expect(res.body.result).to.be.equal(\"User authorization failed.\");\n        done();\n    });",
              "err": {},
              "uuid": "8979a167-e39e-48d3-9068-c100b22f9057",
              "parentUUID": "c4061971-8b84-46f3-bdda-36c72b32bf6d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8ae5d489-9f1a-43e6-b6a5-a63ee2404e1f",
            "af72a145-1f34-43c2-8283-4ac553d2a3ee",
            "8979a167-e39e-48d3-9068-c100b22f9057"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3172,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "4222f7e0-ef97-4fb6-9d29-f3ae0435c753",
          "title": "POST-Authorized/Login (/Account/v1/User/{{userID}})",
          "fullFile": "C:\\my-document\\automations\\api-automation\\testcases\\bookstore.api.js",
          "file": "\\testcases\\bookstore.api.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[BS-7] Verifikasi berhasil generate token pada user baru",
              "fullTitle": "POST-Authorized/Login (/Account/v1/User/{{userID}}) [BS-7] Verifikasi berhasil generate token pada user baru",
              "timedOut": false,
              "duration": 1626,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(bookStore.baseUrl)\n    .post('/Account/v1/Authorized')\n    .send(\n        {\n            \"userName\": username_value,\n            \"password\": \"passWord123*\"\n        })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Connection', 'keep-alive')\n    .set('Accept-Encoding', 'gzip, deflate, br')\n    .set('Authorization', fullToken)\n    .end(function (err, res) {\n        expect(res.statusCode).to.be.equal(200);\n        expect(res.body).true;\n        done();\n    });",
              "err": {},
              "uuid": "42f86de6-eb4f-41c1-a7b6-ae1fc848142f",
              "parentUUID": "4222f7e0-ef97-4fb6-9d29-f3ae0435c753",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[BS-8] Verifikasi gagal authorized/login menggunakan credential yang tidak valid (username/password salah)",
              "fullTitle": "POST-Authorized/Login (/Account/v1/User/{{userID}}) [BS-8] Verifikasi gagal authorized/login menggunakan credential yang tidak valid (username/password salah)",
              "timedOut": false,
              "duration": 992,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(bookStore.baseUrl)\n    .post('/Account/v1/Authorized')\n    .send(\n        {\n            \"userName\": 'invalidName',\n            \"password\": \"invalidpassword\"\n        })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Connection', 'keep-alive')\n    .set('Accept-Encoding', 'gzip, deflate, br')\n    .set('Authorization', fullToken)\n    .end(function (err, res) {\n        expect(res.statusCode).to.be.equal(404);\n        expect(res.body.code).to.be.equal(\"1207\");\n        expect(res.body.message).to.be.equal(\"User not found!\");\n        done();\n    });",
              "err": {},
              "uuid": "db29d31e-c3be-4555-9170-455e85765d28",
              "parentUUID": "4222f7e0-ef97-4fb6-9d29-f3ae0435c753",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[BS-9] Verifikasi gagal authorized/login menggunakan empty string (tidak mengisi semua field)",
              "fullTitle": "POST-Authorized/Login (/Account/v1/User/{{userID}}) [BS-9] Verifikasi gagal authorized/login menggunakan empty string (tidak mengisi semua field)",
              "timedOut": false,
              "duration": 667,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(bookStore.baseUrl)\n    .post('/Account/v1/Authorized')\n    .send(\n        {\n            \"userName\": '',\n            \"password\": ''\n        })\n    .set('Accept', 'application/json')\n    .set('Content-Type', 'application/json')\n    .set('Connection', 'keep-alive')\n    .set('Accept-Encoding', 'gzip, deflate, br')\n    .set('Authorization', fullToken)\n    .end(function (err, res) {\n        expect(res.statusCode).to.be.equal(400);\n        expect(res.body.code).to.be.equal(\"1200\");\n        expect(res.body.message).to.be.equal(\"UserName and Password required.\");\n        done();\n    });",
              "err": {},
              "uuid": "fa0a8c15-5828-479b-bf84-cde8fa9ff7d6",
              "parentUUID": "4222f7e0-ef97-4fb6-9d29-f3ae0435c753",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "42f86de6-eb4f-41c1-a7b6-ae1fc848142f",
            "db29d31e-c3be-4555-9170-455e85765d28",
            "fa0a8c15-5828-479b-bf84-cde8fa9ff7d6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 3285,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "ff45cb9a-4f5b-4f12-9b81-1df2a57e960d",
          "title": "GET-Get User (/Account/v1/User/{{userID}})",
          "fullFile": "C:\\my-document\\automations\\api-automation\\testcases\\bookstore.api.js",
          "file": "\\testcases\\bookstore.api.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[BS-10] Verifikasi berhasil get user dengan userID yang valid",
              "fullTitle": "GET-Get User (/Account/v1/User/{{userID}}) [BS-10] Verifikasi berhasil get user dengan userID yang valid",
              "timedOut": false,
              "duration": 707,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(bookStore.baseUrl)\n    .get('/Account/v1/User/'+userID_value)\n    .set('Accept', 'application/json')\n    .set('Connection', 'keep-alive')\n    .set('Accept-Encoding', 'gzip, deflate, br')\n    .set('Authorization', 'Bearer '+token)\n    .end(function (err, res) {\n        expect(res.statusCode).to.be.equal(200)\n        expect(res.body.userID).not.to.be.null;\n        expect(res.body.username).not.to.be.null;\n        done();\n    });",
              "err": {},
              "uuid": "2449f3eb-ae74-483f-8719-25b19196a525",
              "parentUUID": "ff45cb9a-4f5b-4f12-9b81-1df2a57e960d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[BS-11] Verifikasi gagal get user dengan bearer token yang tidak valid",
              "fullTitle": "GET-Get User (/Account/v1/User/{{userID}}) [BS-11] Verifikasi gagal get user dengan bearer token yang tidak valid",
              "timedOut": false,
              "duration": 879,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(bookStore.baseUrl)\n    .get('/Account/v1/User/'+userID_value)\n    .set('Accept', 'application/json')\n    .set('Connection', 'keep-alive')\n    .set('Accept-Encoding', 'gzip, deflate, br')\n    .set('Authorization', 'Invalid '+token)\n    .end(function (err, res) {\n        expect(res.statusCode).to.be.equal(401)\n        expect(res.body.code).to.be.equal(\"1200\")\n        expect(res.body.message).to.be.equal(\"User not authorized!\")\n        done();\n    });",
              "err": {},
              "uuid": "f181f093-31f3-4d38-80ff-54d22b44b825",
              "parentUUID": "ff45cb9a-4f5b-4f12-9b81-1df2a57e960d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[BS-12] Verifikasi gagal get user dengan userID yang tidak valid",
              "fullTitle": "GET-Get User (/Account/v1/User/{{userID}}) [BS-12] Verifikasi gagal get user dengan userID yang tidak valid",
              "timedOut": false,
              "duration": 692,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(bookStore.baseUrl)\n.get('/Account/v1/User/965256f5-9247-4776-94dd-e8fa68ff1362s')\n.set('Accept', 'application/json')\n.set('Connection', 'keep-alive')\n.set('Accept-Encoding', 'gzip, deflate, br')\n.set('Authorization', 'Bearer '+token)\n.end(function (err, res) {\n    expect(res.statusCode).to.be.equal(401)\n    expect(res.body.code).to.be.equal(\"1207\")\n    expect(res.body.message).to.be.equal(\"User not found!\")\n    done();\n});",
              "err": {},
              "uuid": "e0d26e28-e0b8-4f95-972b-d6dd5f9e4dd0",
              "parentUUID": "ff45cb9a-4f5b-4f12-9b81-1df2a57e960d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2449f3eb-ae74-483f-8719-25b19196a525",
            "f181f093-31f3-4d38-80ff-54d22b44b825",
            "e0d26e28-e0b8-4f95-972b-d6dd5f9e4dd0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2278,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        },
        {
          "uuid": "4e06d519-7dda-4d51-8aa9-049a822e5145",
          "title": "DELETE-Delete User (/Account/v1/User/{{userID}})",
          "fullFile": "C:\\my-document\\automations\\api-automation\\testcases\\bookstore.api.js",
          "file": "\\testcases\\bookstore.api.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "[BS-25] Verifikasi berhasil delete user dengan userID yang valid",
              "fullTitle": "DELETE-Delete User (/Account/v1/User/{{userID}}) [BS-25] Verifikasi berhasil delete user dengan userID yang valid",
              "timedOut": false,
              "duration": 1234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(bookStore.baseUrl)\n    .delete('/Account/v1/User/'+userID_value)\n    .set('Accept', 'application/json')\n    .set('Connection', 'keep-alive')\n    .set('Accept-Encoding', 'gzip, deflate, br')\n    .set('Authorization', 'Bearer '+token)\n    .end(function (err, res) {\n        expect(res.statusCode).to.be.equal(204)\n        done();\n    });",
              "err": {},
              "uuid": "5e44e667-561a-4e0a-9158-5374edd59a59",
              "parentUUID": "4e06d519-7dda-4d51-8aa9-049a822e5145",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[BS-26] Verifikasi gagal delete user dengan bearer token yang tidak valid",
              "fullTitle": "DELETE-Delete User (/Account/v1/User/{{userID}}) [BS-26] Verifikasi gagal delete user dengan bearer token yang tidak valid",
              "timedOut": false,
              "duration": 637,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(bookStore.baseUrl)\n    .delete('/Account/v1/User/'+userID_value)\n    .set('Accept', 'application/json')\n    .set('Connection', 'keep-alive')\n    .set('Accept-Encoding', 'gzip, deflate, br')\n    .set('Authorization', 'Invalid '+token)\n    .end(function (err, res) {\n        expect(res.statusCode).to.be.equal(401)\n        expect(res.body.code).to.be.equal(\"1200\")\n        expect(res.body.message).to.be.equal(\"User not authorized!\")\n        done();\n    });",
              "err": {},
              "uuid": "d189db63-2619-4d29-96b6-c8ac3cf6be23",
              "parentUUID": "4e06d519-7dda-4d51-8aa9-049a822e5145",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "[BS-27] Verifikasi gagal delete user dengan userID yang tidak valid",
              "fullTitle": "DELETE-Delete User (/Account/v1/User/{{userID}}) [BS-27] Verifikasi gagal delete user dengan userID yang tidak valid",
              "timedOut": false,
              "duration": 667,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request(bookStore.baseUrl)\n.delete('/Account/v1/User/965256f5-9247-4776-94dd-e8fa68ff1362s')\n.set('Accept', 'application/json')\n.set('Connection', 'keep-alive')\n.set('Accept-Encoding', 'gzip, deflate, br')\n.set('Authorization', 'Bearer '+token)\n.end(function (err, res) {\n    expect(res.statusCode).to.be.equal(200)\n    expect(res.body.code).to.be.equal(\"1207\")\n    expect(res.body.message).to.be.equal(\"User Id not correct!\")\n    done();\n});",
              "err": {},
              "uuid": "741c4db3-96c7-4687-8a9c-93b891f29ca1",
              "parentUUID": "4e06d519-7dda-4d51-8aa9-049a822e5145",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5e44e667-561a-4e0a-9158-5374edd59a59",
            "d189db63-2619-4d29-96b6-c8ac3cf6be23",
            "741c4db3-96c7-4687-8a9c-93b891f29ca1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2538,
          "root": false,
          "rootEmpty": false,
          "_timeout": 5000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 5000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}